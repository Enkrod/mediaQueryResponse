/*!
 * mediaQueryResponse (MQR) v1.0.0
 * @author: Sebastian Wolfertz (https://github.com/Enkrod)
 * @license: MIT
 */
var mediaQueryResponse=function(){var e={enabled:!0,debug:!1},r={any:{subscribers:{}}},n={},s={},o=-1;function u(e){return void 0!==e}function a(e){return"number"==typeof e&&e%1==0?"screen and (min-width: "+e+"px)":"string"==typeof e?e:(console.warn("mediaQueryResponse: Query does not parse!",e),!1)}function i(){return matchMedia?!!e.enabled||(e.debug&&console.warn("mediaQueryResponse: Disabled!"),!1):(console.warn("mediaQueryResponse: No matchMedia-API found - mediaQueryResponse won't work!"),!1)}function t(n,s,o){var u,a,i,t,d;for(i in t=r[n].subscribers)t.hasOwnProperty(i)&&(a=t[i],u={matches:o.matches,query:o.media,label:n,token:i,trigger:s},e.debug&&console.log("mediaQueryResponse: debugging",a,u),"function"==typeof(d=a)?d(u):console.warn("mediaQueryResponse: Not a function:",d))}function d(e){if(Array.isArray(e))for(var s=0;s<e.length;s++)d(e[s]);else{if(!r.hasOwnProperty(n[e]))return console.warn('mediaQueryResponse: Cannot unsubscribe from non-existent token "'+e+'".'),!1;delete r[n[e]].subscribers[e],delete n[e]}}return{debug:function(r){return u(r)?typeof r==typeof!0?(e.debug=r,console.log('mediaQueryResponse: Debugging set to: "'+r+'".'),e.debug):(console.warn("mediaQueryResponse: Debugging-state cannot be set, needs to be boolean or undefined:",r),!1):(e.debug=!e.debug,console.log('mediaQueryResponse: Debugging toggled: "'+e.debug+'".'),e.debug)},shutdown:function(){return e.enabled=!1,!0},registerQuery:function(e,n){if(!i())return!1;var o=a(n);return u(s[o])?(console.warn('mediaQueryResponse: Query "'+o+'" already registered, instead of registering "'+e+'" use existing Query: "'+s[o]+'".'),!1):u(r[e])?(console.warn('mediaQueryResponse: Query "'+e+'" already registered.'),!1):(r[e]={query:o,api:window.matchMedia(o),subscribers:{},call:function(r){t(e,e,r),t("any",e,r)}},r[e].api.addListener(r[e].call),s[o]=e,!0)},clearQuery:function(e,n){if(!i())return!1;if(n=!u(n)||n,!u(r[e]))return console.warn('mediaQueryResponse: Query "'+e+'" not registered.'),!1;for(var o in r[e].subscribers)if(r[e].subscribers.hasOwnProperty(o)){if(n)return console.warn('mediaQueryResponse: Query "'+e+'" has subscribers and safeMode is ON. Not cleared.'),!1;d(o)}return r[e].api.removeListener(r[e].call),delete s[r[e].query],delete r[e],!0},changeQuery:function(e,n){if(!i())return!1;var o=a(n);return u(r[e])?u(s[o])?(console.warn('mediaQueryResponse: Cannot change Query "'+e+'" to "'+o+'" already registered by "'+s[o]+'".'),!1):(delete s[r[e].query],r[e].api.removeListener(r[e].call),s[o]=e,r[e].query=o,r[e].api=window.matchMedia(o),r[e].api.addListener(r[e].call),!0):(console.warn('mediaQueryResponse: Query "'+e+'" not registered.'),!1)},subscribe:function e(s,a,i){if(i=u(i)?i:[],Array.isArray(s)){for(var t=0;t<s.length;t++)i=e(s[t],a,i);return i}if(Array.isArray(a)){for(var d=0;d<a.length;d++)i=e(s,a[d],i);return i}if(r.hasOwnProperty(s)){var y=++o;r[s].subscribers[y]=a,i.push(y),n[y]=s}else console.warn('mediaQueryResponse: Query for "'+s+'" undefined, please register a query through: mediaQueryResponse.registerQuery("'+s+"\", 'SomeQuery')."),i.push(!1);return i},unsubscribe:d}}();